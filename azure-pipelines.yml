trigger:
- main

pool:
  vmImage: 'windows-latest'

stages:
- stage: Build

  jobs:
    - job: build
     
      steps:
      - task: UseDotNet@2
        displayName: 'Use .NET 6 sdk'
        inputs:
          packageType: 'sdk'
          version: 'net6.0'
          includePreviewVersions: true
              
      - task: DotNetCoreCLI@2
        displayName: Build solution
        inputs:
          command: 'build'
          projects: '**/*.sln'
          arguments: '--configuration $(buildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: Run unit tests
        inputs:
          command: 'test'
          projects: '**/*Tests/*.csproj'
          arguments: '--configuration $(buildConfiguration)'
    
- stage: Development
  displayName: 'Deploy to Dev'
  dependsOn: [ Build ]
  condition: succeeded()
  variables:
  - group: bookstore
  
  jobs:
    - job:  DeployToDevelopment
      displayName: 'Deploy Development'
      variables:
        sqlFile: '$(Build.SourcesDirectory)/SQL/sqlscript.sql'
        
      steps:
      
      # Publish it as .NET 6 self-contained application for linux runtime
      - task: DotNetCoreCLI@2
        inputs:
          command: publish
          publishWebProjects: True
          arguments: '--configuration $(BuildConfiguration) --framework $(dotNetFramework) --runtime $(targetRuntime) --self-contained --output $(Build.ArtifactStagingDirectory)'
          zipAfterPublish: True

      # Package the file and uploads them as an artifact of the build
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)'
          artifact: 'api'
          publishLocation: 'pipeline'

      - task: AzureRmWebAppDeployment@4
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: 'Pay-As-You-Go(37fbd454-93b6-42b6-846f-08d4dc56df31)'
          appType: 'webApp'
          WebAppName: 'appsvc-csvuploader-api'
          package: '$(Pipeline.Workspace)/**/*.zip'